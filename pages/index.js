import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import app from '../database/fireBase'
import { getDatabase, ref, set, get, child } from "firebase/database";
import React from 'react';
import { Line } from 'react-chartjs-2';

class Home extends React.Component {
  constructor(props) {
    super(props)
    this.state = {
      lineData: {
        labels: ['January', 'February', 'March',
          'April', 'May'],
        datasets: [
          {
            label: 'Rainfall',
            fill: false,
            lineTension: 0.5,
            backgroundColor: 'rgba(75,192,192,1)',
            borderColor: 'rgba(0,0,0,1)',
            borderWidth: 2,
            data: [65, 59, 80, 81, 56]
          }
        ]
      }
    }
  }

  writeUserData(userId, name, email, imageUrl) {
    const db = getDatabase();
    set(ref(db, 'data/users/' + userId), {
      username: name,
      email: email,
      profile_picture: imageUrl
    });
  }

  readUserData(userId) {
    const dbRef = ref(getDatabase());
    get(child(dbRef, `data/user/${userId}`)).then((snapshot) => {
      if (snapshot.exists()) {
        console.log(snapshot.val());
      } else {
        console.log("No data available");
      }
    }).catch((error) => {
      console.error(error);
    });
  }

  readHisData() {
    const dbRef = ref(getDatabase());
    get(child(dbRef, `data/history/-N8cGv2geojehY71rcyj`)).then((snapshot) => {
      if (snapshot.exists()) {

        const homes = snapshot.val();
        var sector = homes.filter(x => x.SYS.includes("."));
        var sectorLabel = sector.map(function (item) {
          return item['SYS'];
        });

        const totalVal = sector.reduce((accumulator, object) => {
          return accumulator + object.VALUE;
        }, 0);

        console.log(totalVal);
        console.log(sector);
        console.log(sectorLabel);

      } else {
        console.log("No data available");
      }
    }).catch((error) => {
      console.error(error);
    });
  }

  render() {

    const { lineData } = this.state;

    return (
      <div className={styles.container}>
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <main className={styles.main}>
          <h1 className={styles.title}>
            Welcome to <a href="https://nextjs.org">Next.js!</a>
          </h1>

          <p className={styles.description}>
            Get started by editing{' '}
            <code className={styles.code}>pages/index.js</code>
          </p>

          <button onClick={() => this.writeUserData("x1", "x2", "x3", "x4")} value="WireToDatabase">WireToDatabase</button>
          <button onClick={() => this.readUserData("x1")} value="readDatabase">readDatabase</button>
          <button onClick={() => this.readHisData()} value="readHisData">readHisData</button>

          <Line
            data={lineData}
            options={{
              title: {
                display: true,
                text: 'Average Rainfall per month',
                fontSize: 20
              },
              legend: {
                display: true,
                position: 'right'
              }
            }}
          />


          <div className={styles.grid}>
            <a href="https://nextjs.org/docs" className={styles.card}>
              <h2>Documentation &rarr;</h2>
              <p>Find in-depth information about Next.js features and API.</p>
            </a>

            <a href="https://nextjs.org/learn" className={styles.card}>
              <h2>Learn &rarr;</h2>
              <p>Learn about Next.js in an interactive course with quizzes!</p>
            </a>

            <a
              href="https://github.com/vercel/next.js/tree/canary/examples"
              className={styles.card}
            >
              <h2>Examples &rarr;</h2>
              <p>Discover and deploy boilerplate example Next.js projects.</p>
            </a>

            <a
              href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
              className={styles.card}
            >
              <h2>Deploy &rarr;</h2>
              <p>
                Instantly deploy your Next.js site to a public URL with Vercel.
              </p>
            </a>
          </div>
        </main>

        <footer className={styles.footer}>
          <a
            href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            target="_blank"
            rel="noopener noreferrer"
          >
            Powered by{' '}
            <span className={styles.logo}>
              <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
            </span>
          </a>
        </footer>
      </div>
    )
  }
}

export default Home;